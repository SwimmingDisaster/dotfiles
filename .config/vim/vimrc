if empty($XDG_CONFIG_HOME)
  let $XDG_CONFIG_HOME = $HOME.'/.config'
endif
if empty($XDG_CACHE_HOME)
  let $XDG_CACHE_HOME = $HOME.'/.cache'
endif
if empty($XDG_DATA_HOME)
  let $XDG_DATA_HOME = $HOME.'/.local/share'
endif
if empty($XDG_STATE_HOME)
  let $XDG_STATE_HOME = $HOME.'/.local/state'
endif

if !isdirectory($XDG_CACHE_HOME  . "/vim/swap")
  call mkdir($XDG_CACHE_HOME . "/vim/swap", "p")
endif
if !isdirectory($XDG_CACHE_HOME . "/vim/backup")
  call mkdir($XDG_CACHE_HOME . "/vim/backup", "p")
endif
if !isdirectory($XDG_CACHE_HOME . "/vim/undo")
  call mkdir($XDG_CACHE_HOME . "/vim/undo", "p")
endif



set tabstop=4 softtabstop=4
set shiftwidth=4
set smartindent

set guitablabel=%t
set relativenumber
set nu
set clipboard=unnamed
" set foldmethod=syntax

set undofile " Maintain undo history between sessions

" set fmr={,}
" set fdm=marker

set noerrorbells
set novisualbell
set t_vb=
set tm=500
set belloff=all

set hidden
set nowrap

set incsearch
set scrolloff=8
set signcolumn=yes

set rtp^=$XDG_CONFIG_HOME/vim
set rtp+=$XDG_CACHE_HOME/vim

set encoding=utf-8
set backspace=indent,eol,start

set re=1
set lazyredraw
set ttyfast 

" enter the current millenium
set nocompatible

set completeopt-=preview

set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_DATA_HOME/vim
set runtimepath+=$XDG_CONFIG_HOME/vim/after

set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

let g:netrw_home = $XDG_DATA_HOME."/vim"
call mkdir($XDG_DATA_HOME."/vim/spell", 'p')
set viewdir=$XDG_DATA_HOME/vim/view | call mkdir(&viewdir, 'p')

set backupdir=$XDG_CACHE_HOME/vim/backup | call mkdir(&backupdir, 'p')
set directory=$XDG_CACHE_HOME/vim/swap   | call mkdir(&directory, 'p')
set undodir=$XDG_CACHE_HOME/vim/undo     | call mkdir(&undodir,   'p')

if !has('nvim') | set viminfofile=$XDG_CACHE_HOME/vim/viminfo | endif

" enable syntax and plugins (for netrw)
syntax enable
filetype plugin on

" Display all matching files when we tab complete
set wildmenu 

let g:loaded_youcompleteme = 1

call plug#begin('$XDG_CACHE_HOME/vim/plugged')

Plug 'kaicataldo/material.vim', { 'branch': 'main' }
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-scripts/CmdlineComplete'
Plug 'bfrg/vim-cpp-modern'
Plug 'arecarn/vim-go-to-buffer'
Plug 'ycm-core/YouCompleteMe'
Plug 'tikhomirov/vim-glsl'

call plug#end()


" command! -bang -nargs=? GFiles     call fzf#vim#gitfiles(<q-args>,
" 			\ <q-args> != '?' ? (                                                                             
" 			\ <bang>0 ? fzf#vim#with_preview('up:90%')                                     
" 			\         : fzf#vim#with_preview('down:0%', 'CTRL-/')                        
" 			\) : <bang>0                                                                 
" 			\)                     

let mapleader = " "
nnoremap <c-p> :GFiles --exclude-standard --others --cached<cr>
nmap <C-B> :!clear && MSBuild.exe GAME.sln //v:Minimal //p:Configuration=Debug //p:Platform=x64 && cd bin/x64/Debug && start GAME.exe && cd ../../.. <cr>
" format the file
" in your .vimrc (_vimrc for Windows)
map <leader>fm gg=G``zz

" inoremap " ""<left>
" inoremap ' ''<left>
" inoremap ( ()<left>
" inoremap [ []<left>
" inoremap { {}<left>
" inoremap {<CR> {<CR>}<ESC>O

autocmd! BufNewFile,BufRead *.vs,*.fs set ft=glsl

" For Neovim 0.1.3 and 0.1.4 - https://github.com/neovim/neovim/pull/2198
if (has('nvim'))
	let $NVIM_TUI_ENABLE_TRUE_COLOR = 1
endif

" For Neovim > 0.1.5 and Vim > patch 7.4.1799 - https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162
" Based on Vim patch 7.4.1770 (`guicolors` option) - https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd
" https://github.com/neovim/neovim/wiki/Following-HEAD#20160511
if (has('termguicolors'))
	set termguicolors
endif

let g:material_terminal_italics = 1
let g:material_theme_style = 'palenight'
colorscheme material

" air-line
let g:airline_powerline_fonts = 1
let g:airline_theme = 'base16'
let g:airline#extensions#tabline#enabled = 1

if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

" YouCompleteMe
let g:ycm_confirm_extra_conf = 0
" let g:ycm_show_diagnostics_ui = 0

highlight LineNr term=bold cterm=NONE ctermfg=cyan ctermbg=NONE gui=NONE guifg=cyan guibg=NONE 

